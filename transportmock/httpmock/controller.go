// Code generated by MockGen. DO NOT EDIT.
// Source: transport/http/controller.go
//
// Generated by this command:
//
//	mockgen -source=transport/http/controller.go -destination=transportmock/httpmock/controller.go -package=httpmock
//

// Package httpmock is a generated GoMock package.
package httpmock

import (
	reflect "reflect"

	echo "github.com/labstack/echo/v4"
	gomock "go.uber.org/mock/gomock"
)

// MockController is a mock of Controller interface.
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
	isgomock struct{}
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// SetEndpoints mocks base method.
func (m *MockController) SetEndpoints(e *echo.Echo) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetEndpoints", e)
}

// SetEndpoints indicates an expected call of SetEndpoints.
func (mr *MockControllerMockRecorder) SetEndpoints(e any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetEndpoints", reflect.TypeOf((*MockController)(nil).SetEndpoints), e)
}

// SetVersionedEndpoints mocks base method.
func (m *MockController) SetVersionedEndpoints(g *echo.Group) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetVersionedEndpoints", g)
}

// SetVersionedEndpoints indicates an expected call of SetVersionedEndpoints.
func (mr *MockControllerMockRecorder) SetVersionedEndpoints(g any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetVersionedEndpoints", reflect.TypeOf((*MockController)(nil).SetVersionedEndpoints), g)
}
